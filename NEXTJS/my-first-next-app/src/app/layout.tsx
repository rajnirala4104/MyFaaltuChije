import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/Navbar";

const inter = Inter({ subsets: ["latin"] });

/**
 * The `metadata` object is used by Next.js to provide metadata to the browser.
 * 
 * The `title` property is an object that contains two properties: `default`
 * and `template`. The `default` property is a string that represents the default
 * title of the page. The `template` property is a string that represents the
 * template for the title of the page. The template is a string that contains
 * a placeholder for the actual title of the page, which is represented by the
 * "%s" character.
 * 
 * The `description` property is a string that represents the description of the
 * page.
 */
export const metadata: Metadata = {
  title: {
    default: "Next.js",
    template: "%s | Next.js",
  },
  description: "Generated by create next app",
};

/**
 * RootLayout is a functional component that serves as the root layout for
 * all pages in the Next.js application. It takes in a single prop, `children`,
 * which is the content of the page.
 *
 * The component returns an HTML element with the `lang` attribute set to "en"
 * and a `body` element with the `className` attribute set to a combination of
 * the `className` property of the `inter` object and the strings "w-full" and
 * "h-[100vh]". The `children` prop is rendered as the content of the `body`
 * element.
 *
 * @param {Object} props - An object containing the `children` prop.
 * @param {React.ReactNode} props.children - The content of the page.
 * @return {JSX.Element} The root layout for the Next.js application.
 */
export default function RootLayout({ children, }: Readonly<{ children: React.ReactNode; }>) {
  // Return an HTML element with the `lang` attribute set to "en" and a `body`
  // element with the `className` attribute set to a combination of the `className`
  // property of the `inter` object". The
  // `children` prop is rendered as the content of the `body` element.
  return (
    <html lang="en">
      <body className={`${inter.className} h-[90vh]`}>
        <Navbar />
        {children}
      </body>
    </html>
  );
}
